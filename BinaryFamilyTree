class Node{
    String key;
    Node left,right;

    public Node(String item){
        key=item;
        left=right=null;
    }
}
class BinaryTree{
    Node root;
     void inorder(Node node) {
        if (node != null) {
            inorder(node.left);
            System.out.print(node.key + " ");
            inorder(node.right);
        }
    }
     void postorder(Node node) {
        if (node != null) {
            postorder(node.left);
            postorder(node.right);
            System.out.print(node.key + " ");
        }
    }
     void preorder(Node node) {
        if (node != null) {
            System.out.print(node.key + " ");
            preorder(node.left);
            preorder(node.right);
        }
    }
public static void main(String[] args){
    BinaryTree tree=new BinaryTree();
    tree.root=new Node("Gangireddy");
    tree.root.left=new Node("basireddy");
    tree.root.right=new Node("chinna");
    tree.root.left.right=new Node("prem");
    tree.root.left.left=new Node("mani");
    tree.root.right.left=new Node("mahesh");
    tree.root.right.right=new Node("charan");
    System.out.println("Binary Tree(Inorder):");
    tree.inorder(tree.root);
    System.out.println();
    System.out.println("Binary Tree(preorder):");
    tree.preorder(tree.root);
    System.out.println();
    System.out.println("Binary Tree(postorder):");
    tree.postorder(tree.root);
    System.out.println();
}
}
