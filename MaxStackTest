import java.util.*;
class MaxStack 
{
    private Stack<Integer> stack;
    private Stack<Integer> maxStack;
    public MaxStack() 
    {
        stack=new Stack<>();
        maxStack=new Stack<>();
    }
    public void push(int val)
    {
        stack.push(val);
        if(maxStack.isEmpty() || val >=maxStack.peek())
        {
            maxStack.push(val);
        }
    }
    public void pop()
    {
        if(!stack.isEmpty())
        {
            int val=stack.pop();
            if(val==maxStack.peek())
            {
                maxStack.pop();
            }
        }
    }        
    public int top()
    {
        if(!stack.isEmpty())
        {
            return stack.peek();
        }
        return -1;
    }
    public int getMax()
    {
        if(!maxStack.isEmpty())
        {
            return maxStack.peek();
        }
        return -1;
    }

}
class MaxStackTest
{
    public static void main(String[] args)
    {
        MaxStack maxStack=new MaxStack();
        maxStack.push(5);
        maxStack.push(1);
        maxStack.push(3);
        System.out.println(maxStack.getMax());
        maxStack.pop();
        System.out.println(maxStack.getMax());
    }
}
    
